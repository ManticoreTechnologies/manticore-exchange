
/* App.css handles the parent container styling 
   for the Navbar, Main and Footer
   The navbar and footer have fixed heights 
   The main container will grow to take up the 
   remaining space of the viewport
*/


/* App container
    This hosts the navbar, main and footer
*/
.App {

    /* Set position to relative to allow 
       the footer to be absolute relative 
       to this container   
    */
    position: relative;

    /* Set the display to flex to allow the 
       main container to grow and take up the 
       remaining space
    */
    display: flex;
    flex-direction: column;

    /* Set the background color 
       to visualize the layout 
       change to transparent when ready
    */
    background-color: rgba(155, 42, 42, 0.5);
    
    /* We want the app to be exactly the height of the 
       viewport so that everything is visible correctly
    */
    height: 100vh;

    /* Hide any overflow, this prevents scrollbars from appearing 
       The App container should NEVER scroll
       Scrolling should be handled locally within 
       the main containers child components
    */
    overflow: hidden;

}

/* Main container 

    This is the container that will host the dynamic content 
    The navbar, footer and other static content 
    should not included in this container
*/
.main {

    /* Set the background color 
       to visualize the layout 
       change to transparent when ready
    */
    background-color: rgba(0, 141, 19, 0.3);

    /* Grow to take up the remaining space */
    flex-grow: 1;

}




/* Button st







/* Button Styles */
button.custom-button {
    /* Base button styles */
    border: 1px solid red;
    cursor: pointer;
    border-radius: 10px;
    padding: 10px 20px;
    font-size: 1.8vh;
    font-weight: 1000;
    color: var(--button-text-color);
    background-color: transparent;
    text-shadow: 1px 1px 2px var(--text-shadow-color); /* Add text shadow */
    transition: transform 0.2s ease, box-shadow 0.2s ease, background-color 0.2s ease;
    box-shadow: 0 4px 15px var(--button-shadow-color); /* Subtle shadow effect */
}

button.custom-button:hover {
    /* Hover effects */
    transform: scale(1.1); /* More noticeable scale */
    border: 2px solid var(--button-border-color); /* Solid border on hover */
    background-color: var(--button-hover-background-color); /* Darker red */
    box-shadow: 0 6px 20px var(--button-shadow-color), 0 0 10px var(--button-border-color); /* Stronger shadow and glow effect */
}

button.custom-button:active {
    /* When button is clicked */
    transform: scale(1.05); /* Slightly smaller on click */
    box-shadow: 0 2px 8px var(--button-shadow-color); /* Less shadow on click */
}

/* Input Styles */
input.custom-input {
    width: 100%;
    height: 100%;
    padding: 0;
    border: none;
    outline: none;
    color: var(--search-bar-color); /* White text for contrast */
    background-color: transparent; /* No background */
    border-bottom: var(--search-bar-underline); /* Red underline to match the site's accent color */
    font-size: 18px;
    transition: font-size 0.3s ease, border-color 0.3s ease; 
}

input.custom-input:focus {
    border-bottom: var(--search-bar-underline-focus); /* Change underline to white on focus */
}

input.custom-input::placeholder {
    color: var(--search-bar-color); /* Lighter placeholder text */
}

/* Select Styles */
select.custom-select {
    border: none;
    background-color: transparent;
    color: var(--text-color);
    border-bottom: var(--search-bar-underline); /* Change underline to white on focus */
}

select.custom-select:focus {
    outline: none;
    border-bottom: var(--search-bar-underline-focus);
}

option.custom-option {
    background-color: var(--search-filters-bg-color);
    color: var(--text-color);
}


